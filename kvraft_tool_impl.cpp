/* kvraft_tool_impl.cpp

 Generated by phxrpc_pb2tool from kvraft.proto

*/

#include "kvraft_tool_impl.h"

#include "kvraft_client.h"

#include "phxrpc/file.h"


using namespace phxrpc;
using namespace std;


KVRaftToolImpl::KVRaftToolImpl() {
}

KVRaftToolImpl::~KVRaftToolImpl() {
}

int KVRaftToolImpl::PHXEcho(phxrpc::OptMap &opt_map) {
    google::protobuf::StringValue req;
    google::protobuf::StringValue resp;

    if (nullptr == opt_map.Get('s')) return -1;

    req.set_value(opt_map.Get('s'));

    KVRaftClient client;
    int ret{client.PHXEcho(req, &resp)};
    printf("%s return %d\n", __func__, ret);
    printf("resp: {\n%s}\n", resp.DebugString().c_str());

    return ret;
}

int KVRaftToolImpl::RequestVote(phxrpc::OptMap &opt_map) {
    kvraft::RequestVoteArgs req;
    kvraft::RequestVoteReply resp;

    // TODO: fill req from opt_map

    KVRaftClient client;
    int ret{client.RequestVote(req, &resp)};
    printf("%s return %d\n", __func__, ret);
    printf("resp: {\n%s}\n", resp.DebugString().c_str());

    return ret;
}

int KVRaftToolImpl::AppendEntries(phxrpc::OptMap &opt_map) {
    kvraft::AppendEntriesArgs req;
    kvraft::AppendEntriesReply resp;

    // TODO: fill req from opt_map

    KVRaftClient client;
    int ret{client.AppendEntries(req, &resp)};
    printf("%s return %d\n", __func__, ret);
    printf("resp: {\n%s}\n", resp.DebugString().c_str());

    return ret;
}

int KVRaftToolImpl::Command(phxrpc::OptMap &opt_map) {
    kvraft::KVArgs req;
    kvraft::KVReply resp;

    // TODO: fill req from opt_map

    KVRaftClient client;
    int ret{client.Command(req, &resp)};
    printf("%s return %d\n", __func__, ret);
    printf("resp: {\n%s}\n", resp.DebugString().c_str());

    return ret;
}

